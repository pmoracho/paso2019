mesas_totales_agrp_politica %>%
inner_join(agrupaciones) %>%
filter(CODIGO_MESA == "0600100659X")
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0600100659X") %>%
inner_join(agrupaciones) %>%
select(CODIGO_AGRUPACION, NOMBRE_AGRUPACION, VOTOS_AGRUPACION)
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0600100659X") %>%
inner_join(agrupaciones) %>%
select(CODIGO_AGRUPACION, NOMBRE_AGRUPACION, VOTOS_AGRUPACION) %>%
arrange(NOMBRE_AGRUPACION)
str(mesas_totales_agrp_politica)
descripcion_postulaciones
descripcion_postulaciones %>%
select(CODIGO_CATEGORIA, NOMBRE_CATEGORIA ) %>%
distinct() %>%
arrange(NOMBRE_CATEGORIA) -> categorias
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0600100659X") %>%
inner_join(agrupaciones) %>%
inner_join(categorias)
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0600100659X") %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
select(NOMBRE_CATEGORIA, NOMBRE_AGRUPACION, VOTOS_AGRUPACION) %>%
arrange(NOMBRE_AGRUPACION)
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0600100659X") %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
select(NOMBRE_CATEGORIA, NOMBRE_AGRUPACION, VOTOS_AGRUPACION) %>%
arrange(NOMBRE_CATEGORIA, NOMBRE_AGRUPACION)
mesas_totales_agrp_politica %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
select(CODIGO_CATEGORIA, NOMBRE_CATEGORIA, CODIGO_AGRUPACION, NOMBRE_AGRUPACION, VOTOS_AGRUPACION) %>%
arrange(NOMBRE_CATEGORIA, NOMBRE_AGRUPACION) -> mesas_toatales_x_agrupacion
mesas_toatales_x_agrupacion
View(agrupaciones)
View(categorias)
View(mesas_toatales_x_agrupacion)
mesas_totales_agrp_politica %>%
inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
inner_join(categorias, by = "CODIGO_CATEGORIA") %>%
select(CODIGO_CATEGORIA, CODIGO_AGRUPACION, CODIGO_MESA, VOTOS_AGRUPACION) -> mesas_toatales_x_agrupacion
View(mesas_toatales_x_agrupacion)
# Mesas totales x agrupacion
mesas_totales_agrp_politica %>%
inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
inner_join(categorias, by = "CODIGO_CATEGORIA") %>%
select(CODIGO_CATEGORIA, CODIGO_AGRUPACION, CODIGO_MESA, VOTOS_AGRUPACION) -> mesas_totales_x_agrupacion
View(agrupaciones)
descripcion_postulaciones
descripcion_postulaciones %>%
select(CODIGO_AGRUPACION, CODIGO_LISTA, NOMBRE_LISTA) %>%
distinct() %>%
arrange(NOMBRE_LISTA) -> listas
View(listas)
# Mesas totales x agrupacion
mesas_totales_agrp_politica %>%
#inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
#inner_join(categorias, by = "CODIGO_CATEGORIA") %>%
select(CODIGO_CATEGORIA, CODIGO_AGRUPACION, CODIGO_MESA, VOTOS_AGRUPACION)
# Mesas totales x agrupacion
mesas_totales_agrp_politica %>%
#inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
#inner_join(categorias, by = "CODIGO_CATEGORIA") %>%
select(CODIGO_CATEGORIA, CODIGO_AGRUPACION, CODIGO_MESA, VOTOS_AGRUPACION) -> mesas_totales_x_agrupacion
mesas
mesas_totales_lista %>%
group_by(CODIGO_MESA) %>%
summarise(VOTOS = sum(VOTOS_LISTA)) %>%
mutate(ESCRUTADA = (VOTOS != 0))
as.data.frame() -> mesas
mesas_totales_lista %>%
group_by(CODIGO_MESA) %>%
summarise(VOTOS = sum(VOTOS_LISTA)) %>%
mutate(ESCRUTADA = (VOTOS != 0)) %>%
as.data.frame() -> mesas
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(mesas) %>%
filter(ESCRUTADA == TRUE)
agrupaciones
mesas
mesas %>%
filter(ESCRUTADA == FALSE)
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(mesas) %>%
filter(ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0)
# Mesas con votos para el FDT en 0
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0)
# Mesas con votos para el FDT en 0
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA = '582',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0)
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '582',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0)
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0)
# Mesas con votos para el FDT en 0
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0) %>%
View()
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0) %>%
View()
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0) %>%
mutate(url=get_telegrama_url(CODIGO_MESA ))
View()
# Mesas con votos para el FDT en 0
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0) %>%
mutate(url=get_telegrama_url(CODIGO_MESA )) %>%
View()
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "UNTOS POR EL CAMBIO",
VOTOS_AGRUPACION == 0) %>%
mutate(url=get_telegrama_url(CODIGO_MESA )) %>%
View()
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "JUNTOS POR EL CAMBIO",
VOTOS_AGRUPACION == 0) %>%
mutate(url=get_telegrama_url(CODIGO_MESA )) %>%
View()
# Mesas con votos para el FDT en 0
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
NOMBRE_AGRUPACION == "FRENTE DE TODOS",
VOTOS_AGRUPACION == 0) %>%
mutate(url=get_telegrama_url(CODIGO_MESA )) %>%
View()
View(mesas)
mesas_totales_lista %>%
group_by(CODIGO_MESA) %>%
summarise(VOTOS = sum(VOTOS_LISTA))
mesas_totales %>%
filter(CODIGO_MESA == "0100100001X")
mesas_totales_lista %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO)
mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(VOTOS = sum(VOTOS_AGRUPACION))
mesas_totales_lista %>%
group_by(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
summarise(VOTOS_MESA = sum(VALOR))
mesas_totales_lista
mesas_totales %>%
group_by(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
summarise(VOTOS_MESA = sum(VALOR))
mesas_totales %>%
group_by(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
summarise(VOTOS_MESA = sum(VALOR)) %>%
mutate(url=get_telegrama_url(CODIGO_MESA))
mesas_totales %>%
group_by(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
summarise(VOTOS_MESA = sum(VALOR)) %>%
mutate(URL = get_telegrama_url(CODIGO_MESA)) %>%
View()
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO)
# Todas las mesas
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) -> mesas
mesas_totales_lista %>%
group_by(CODIGO_MESA) %>%
summarise(VOTOS = sum(VOTOS_LISTA))
mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(VOTOS = sum(VOTOS_AGRUPACION))
mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE))
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)),
by = CODIGO_MESA)
mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE))
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)))
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)),
by = "CODIGO_MESA)"
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)),
by = "CODIGO_MESA")
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)),
by = "CODIGO_MESA")
# Todas las mesas
mesas_totales %>%
distinct(CODIGO_MESA, CODIGO_DISTRITO, CODIGO_SECCION, CODIGO_CIRCUITO) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)),
by = "CODIGO_MESA") -> mesas
# Total de mesas Escrutadas Si/No
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No")) %>%
select(Escrutadas, Cantidad) %>%
as.data.frame()
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No"),
TotalMesas = nrow(mesas))
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No"),
TotalMesas = nrow(mesas)) %>%
select(Escrutadas, Cantidad, Porcentaje = Cantidad/TotalMesas)
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No"),
TotalMesas = nrow(mesas)) %>%
mutate(Porcentaje = Porcentaje = Cantidad/TotalMesas) %>%
select(Escrutadas, Cantidad, Porcentaje)
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No"),
TotalMesas = nrow(mesas)) %>%
mutate(Porcentaje = Porcentaje = Cantidad/TotalMesas)
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No"),
TotalMesas = nrow(mesas),
Porcentaje = Cantidad/TotalMesas) %>%
select(Escrutadas, Cantidad, Porcentaje)
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No"),
TotalMesas = nrow(mesas),
Porcentaje = Cantidad/TotalMesas) %>%
select(Escrutadas, Cantidad, Porcentaje) %>%
as.data.frame()
usethis::use_data(mesas)
mesas
descripcion_postulaciones
str(descripcion_postulaciones)
# categorias
descripcion_postulaciones %>%
select(CODIGO_CATEGORIA, NOMBRE_CATEGORIA ) %>%
distinct() %>%
arrange(NOMBRE_CATEGORIA) -> categorias
# listas
descripcion_postulaciones %>%
select(CODIGO_AGRUPACION, CODIGO_LISTA, NOMBRE_LISTA) %>%
distinct() %>%
arrange(NOMBRE_LISTA) -> listas
# agrupaciones
descripcion_postulaciones %>%
select(CODIGO_AGRUPACION, NOMBRE_AGRUPACION) %>%
distinct() %>%
arrange(NOMBRE_AGRUPACION) -> agrupaciones
usethis::use_data(agrupaciones)
usethis::use_data(listas)
usethis::use_data(categorias)
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0100100001X")
mesas_totales %>%
group_by(CODIGO_MESA, ) %>%
filter(CODIGO_MESA == "0100100001X") %>%
group_by(CODIGO_CATEGORIA) %>%
summarise(VOTOS=sum(VOTOS_AGRUPACION))
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0100100001X") %>%
group_by(CODIGO_CATEGORIA) %>%
summarise(VOTOS=sum(VOTOS_AGRUPACION))
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0100100001X") %>%
group_by(CODIGO_CATEGORIA) %>%
summarise(VOTOS=sum(VOTOS_AGRUPACION)) %>%
mutate(url=get_telegrama_url(CODIGO_MESA ))
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0100100001X") %>%
mutate(URL=get_telegrama_url(CODIGO_MESA)) %>%
group_by(CODIGO_CATEGORIA, URL) %>%
summarise(VOTOS=sum(VOTOS_AGRUPACION))
mesas_totales_agrp_politica %>%
filter(CODIGO_MESA == "0100100001X") %>%
mutate(URL=get_telegrama_url(CODIGO_MESA)) %>%
group_by(CODIGO_CATEGORIA, URL) %>%
summarise(VOTOS=sum(VOTOS_AGRUPACION))
mesas_totales_lista %>%
filter(CODIGO_MESA == "0100100001X") %>%
mutate(URL=get_telegrama_url(CODIGO_MESA)) %>%
group_by(CODIGO_CATEGORIA, URL) %>%
summarise(VOTOS=sum(VOTOS_AGRUPACION))
mesas_totales_lista %>%
filter(CODIGO_MESA == "0100100001X") %>%
mutate(URL=get_telegrama_url(CODIGO_MESA)) %>%
group_by(CODIGO_CATEGORIA, URL) %>%
summarise(VOTOS=sum(VOTOS_LISTA))
mesas_totales %>%
filter(CODIGO_MESA == "0100100001X")
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
VOTOS_AGRUPACION == 0) %>%
group_by(NOMBRE_AGRUPACION) %>%
summarize(Cantidad = n())
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
VOTOS_AGRUPACION == 0) %>%
group_by(NOMBRE_AGRUPACION) %>%
summarize(Cantidad = n()) %>%
arrange(-Cantidad)
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
VOTOS_AGRUPACION == 0) %>%
group_by(NOMBRE_AGRUPACION) %>%
summarize(Cantidad = n()) %>%
arrange(Cantidad)
categorias
# Mesas con votos para el FDT en 0 para Gobernador y Vice Gobernador Buenos Aires
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000402000000000',
ESCRUTADA == TRUE,
VOTOS_AGRUPACION == 0) %>%
group_by(NOMBRE_AGRUPACION) %>%
summarize(Cantidad = n()) %>%
arrange(Cantidad)
# Mesas con votos para Presidente y Vicepresidente de la República
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones) %>%
inner_join(categorias) %>%
inner_join(mesas) %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
VOTOS_AGRUPACION == 0) %>%
group_by(NOMBRE_AGRUPACION) %>%
summarize(Cantidad = n()) %>%
arrange(Cantidad)
# Mesas con votos para Presidente y Vicepresidente de la República
mesas_totales_x_agrupacion %>%
inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
inner_join(categorias, by = "CODIGO_CATEGORIA") %>%
inner_join(mesas, by = "CODIGO_MESA") %>%
filter(CODIGO_CATEGORIA == '000100000000000',
ESCRUTADA == TRUE,
VOTOS_AGRUPACION == 0) %>%
group_by(NOMBRE_AGRUPACION) %>%
summarize(Cantidad = n()) %>%
arrange(Cantidad)
mesas_totales_x_agrupacion
mesas_totales_x_agrupacion %>%
group_by(CODIGO_AGRUPACION, CODIGO_CATEGORIA) %>%
summarize(VOTOS_AGRUPACION = sum(VOTOS_AGRUPACION))
mesas_totales_x_agrupacion %>%
group_by(CODIGO_AGRUPACION, CODIGO_CATEGORIA) %>%
summarize(VOTOS_AGRUPACION = sum(VOTOS_AGRUPACION)) %>%
inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
inner_join(categorias, by = "CODIGO_CATEGORIA")
mesas_totales_x_agrupacion %>%
group_by(CODIGO_AGRUPACION, CODIGO_CATEGORIA) %>%
summarize(VOTOS_AGRUPACION = sum(VOTOS_AGRUPACION)) %>%
inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
inner_join(categorias, by = "CODIGO_CATEGORIA") %>%
arrange(CODIGO_CATEGORIA, VOTOS_AGRUPACION)
mesas_totales_x_agrupacion %>%
group_by(CODIGO_AGRUPACION, CODIGO_CATEGORIA) %>%
summarize(VOTOS_AGRUPACION = sum(VOTOS_AGRUPACION)) %>%
inner_join(agrupaciones, by = "CODIGO_AGRUPACION") %>%
inner_join(categorias, by = "CODIGO_CATEGORIA") %>%
arrange(CODIGO_CATEGORIA, -VOTOS_AGRUPACION)
head(mesas)
listas
head(listas)
head(mesas_totales_agrp_politica)
View(listas)
View(mesas)
View(mesas_totales_agrp_politica)
View(mesas)
# Todas las mesas
mesas_totales %>%
distinct(CODIGO_MESA) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)),
by = "CODIGO_MESA") -> mesas
View(mesas)
mesas_totales_x_agrupacion
# Total de mesas Escrutadas Si/No
mesas %>%
group_by(ESCRUTADA) %>%
summarise(Cantidad = n()) %>%
mutate(Escrutadas = ifelse(ESCRUTADA, "Si", "No"),
TotalMesas = nrow(mesas),
Porcentaje = Cantidad/TotalMesas) %>%
select(Escrutadas, Cantidad, Porcentaje)
mesas_totales_agrp_politica %>%
select(CODIGO_AGRUPACION, CODIGO_CATEGORIA, CODIGO_MESA, VOTOS_AGRUPACION) -> agrupacion_categoria_mesas
View(agrupacion_categoria_mesas)
devtools::load_all(".")
devtools::document()
str(agrupaciones)
str(mesas)
mesas_totales %>%
distinct(CODIGO_MESA) %>%
left_join(mesas_totales_agrp_politica %>%
group_by(CODIGO_MESA) %>%
summarise(ESCRUTADA = ifelse(sum(VOTOS_AGRUPACION)==0, FALSE, TRUE)),
by = "CODIGO_MESA") -> mesas
usethis::use_data(mesas)
usethis::use_data(mesas, overwrite=TRUE)
str(mesas)
descripcion_regiones
str(descripcion_regiones)
str(descripcion_postulaciones)
str(mesas_totales_lista)
